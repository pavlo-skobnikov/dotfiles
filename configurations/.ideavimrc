"" Source common configurations for Vim and IdeaVim. 
source ~/.vimrc


""" Options section.
" REFERENCE: https://github.com/JetBrains/ideavim/blob/master/doc/set-commands.md

" Use the IntelliJ's `smart join` feature for `J` motion.
set ideajoin=true

" Keep the currently active mode when activating a refactor.
set idearefactormode=keep


""" Plugins section.
" REFERENCE: https://github.com/JetBrains/ideavim/wiki/IdeaVim-Plugins

" Quick and dot-repeatable text operations.
set surround
set commentary
set ReplaceWithRegister
set exchange

" More text objects.
set textobj-entire
set textobj-indent
set functiontextobj
set argtextobj
let g:argtextobj_pairs = "(:),{:},[:],<:>"

" Better visibility for verb-object actions.
set highlightedyank
let g:highlightedyank_highlight_duration = "250"

" Improved navigation.
set vim-paragraph-motion
set matchit

" Better maps for the project explorer.
set NERDTree


""" Maps section.

"" Miscellaneous maps.

" Launch Ataman.
map <Leader> <Action>(LeaderAction)

" Repeat last Ataman action.
map <C-.> <Action>(RepeatLatestAtamanCommandAction)

" Toggle fold
map za <Action>(ExpandCollapseToggleAction)

" Transpose splits.
map <C-w>X <Action>(ChangeSplitOrientation)

" Select current file in/focus project explorer.
map - <Action>(SelectInProjectView)
map _ <Action>(ActivateProjectToolWindow)

" Decrease/increase selection.
map <C-j> <Action>(EditorUnSelectWord)
map <C-k> <Action>(EditorSelectWord)

" Reload IdeaVim configuration.
" NOTE: The secret code easter egg isn't present in IdeaVim :(
map g? :source ~/.ideavimrc<Cr>


"" Completions.
" Accept completion Vim-style.
imap <C-y> <Action>(EditorChooseLookupItem)
imap <C-S-y> <Action>(EditorChooseLookupItemReplace)

" Regular LSP completion.
imap <C-x> <Action>(CodeCompletion)

" Extra 'smart' completions.
imap <C-S-c> <Action>(ClassNameCompletion)
imap <C-S-t> <Action>(SmartTypeCompletion)
imap <C-S-s> <Action>(EditorCompleteStatement)

" Hippie completion.
imap <C-S-p> <Action>(HippieBackwardCompletion)
imap <C-S-n> <Action>(HippieCompletion)

" Copilot/AI completion.
imap <C-S-a> <Action>(copilot.requestCompletions)

imap <C-S-[> <Action>(copilot.cyclePrevInlays)
imap <C-S-]> <Action>(copilot.cycleNextInlays)


"" Multicursors.
" Line-by-line add cursors.
map <Up> <Action>(EditorCloneCaretAbove)
map <Down> <Action>(EditorCloneCaretBelow)

" Select next match.
map <Right> <Action>(SelectNextOccurrence)

" Select all matches.
map <S-Right> <Action>(SelectAllOccurrences)

" Move the current cursor to the next match removing the current one.
map <C-Right> <Action>(FindNext)

" Remove current cursor and move back to the previous one.
map <Left> <Action>(UnselectPreviousOccurrence)

" Add cursors to the end of all lines for the current visual selection.
map <C-S-Right> <Action>(EditorAddCaretPerSelectedLine)

" Align all cursors by the rightmost one.
map ga <Action>(VerticalAlign.VerticalAlignAction)


"" LSP actions (Neovim default mappings inspired).
" Goto definition.
map <C-]> <Action>(GotoDeclarationOnly)

" Goto type declaration.
map gd <Action>(GotoTypeDeclaration)

" Show expression type information.
map gy <Action>(ExpressionTypeInfo)

" Show diagnostic info.
map <C-w>d <Action>(ShowErrorDescription)

" Show parameter information.
map <C-s> <Action>(ParameterInfo)
imap <C-s> <Action>(ParameterInfo)


"" Previous/next.
" Previous/next diagnostic.
map [d <Action>(GotoPreviousError)
map ]d <Action>(GotoNextError)

" Previous/next function.
map [f <Action>(MethodUp)
map ]f <Action>(MethodDown)

" Previous/next change.
map [c <Action>(VcsShowPrevChangeMarker)
map ]c <Action>(VcsShowNextChangeMarker)

" Previous/next qflist item.
map [q <Action>(PreviousOccurence)
map ]q <Action>(NextOccurence)

