# https://github.com/lightbend/config/blob/master/HOCON.md

bindings {
  "[" {actionId: EditorUnSelectWord, description: shrink selection}
  "]" {actionId: EditorSelectWord, description: expand selection}
  "/" {actionId: FindInPath, description: global search in workspace folder}
  "?" {actionId: GotoAction, description: open command palette}
  b {actionId: ShowBookmarks, description: bookmark}
  j {actionId: RecentLocations, description: recent locations jumplist}
  a {
    description: code actions...
    bindings {
      a {actionId: ShowIntentionActions, description: perform code action}
      g {actionId: Generate, description: generate}
      m {actionId: RefactoringMenu, description: open refactor menu}
      r {actionId: RenameElement, description: rename symbol}
      o {actionId: OptimizeImports, description: optimize imports}
      y {actionId: CopyReference, description: yank reference}
      k {actionId: QuickJavaDoc, description: show hover info}
      p {actionId: ParameterInfo, description: show parameter info}
      t {actionId: ExpressionTypeInfo, description: show expression type info}
      d {actionId: ShowErrorDescription, description: show diagnostic info}
      i {actionId: InspectCode, description: inspect code}
      c {actionId: HierarchyGroup, description: open code hierarchy}
      h {actionId: HighlightUsagesInFile, description: highlight symbol references}
    }
  }
  c {
    description: copilot...
    bindings {
      c {actionId: ActivateGitHubCopilotChatToolWindow, description: focus chat}
      i {actionId: copilot.chat.inline, description: inline}
      o {actionId: copilot.openCopilot, description: open completions}
    }
  }
  d {
    description: debug...
    bindings {
      l {actionId: ChooseDebugConfiguration, description: launch debug target}
      d {actionId: Debug, description: launch current debug target}
      b {actionId: ToggleLineBreakpoint, description: toggle breakpoint}
      b {actionId: ToggleBreakpointEnabled, description: toggle breakpoint enabled}
      F {actionId: ToggleFieldBreakpoint, description: add field breakpoint}
      M {actionId: ToggleMethodBreakpoint, description: add method breakpoint}
      C {actionId: AddConditionalBreakpoint, description: toggle conditional breakpoint}
      E {actionId: EditBreakpoint, description: edit breakpoint}
      c {actionId: Resume, description: continue program execution}
      h {actionId: Pause, description: pause program execution}
      i {actionId: StepInto, description: step in}
      o {actionId: StepOut, description: step out}
      n {actionId: StepOver, description: step to next}
      C {actionId: RunToCursor, description: run to cursor}
      s {actionId: Stop, description: end debug session}
      f {actionId: ViewBreakpoints, description: search breakpoints}
    }
  }
  e {
    description: project explorer...
    bindings {
      f {actionId: SelectInProjectView, description: select current file}
      o {actionId: ActivateProjectToolWindow, description: open explorer}
    }
  }
  f {
    description: files/buffers...
    bindings {
      f {actionId: GotoFile, description: open file picker}
      g {actionId: RecentChangedFiles, description: open recent changed files picker}
      n {actionId: NewElement, description: create new file}
      y {actionId: CopyReferencePopup, description: copy filename}
      r {actionId: RenameFile, description: rename file}
    }
  }
  g {
    description: git...
    bindings {
      a {actionId: Git.Menu, description: actions menu}
      g {actionId: CheckinProject, description: stage and commit}
      r {actionId: Vcs.RollbackChangedLines, description: reset hunk}
      p {actionId: Vcs.UpdateProject, description: pull}
      P {actionId: Vcs.Push, description: push}
      c {actionId: Git.Branches, description: checkout branches}
      s {actionId: Vcs.Show.Shelf, description: shelf}
      l {actionId: Vcs.Show.Log, description: log}
      b {actionId: Annotate, description: blame}
    }
  }
  h {
    description: harpoon...
    bindings {
      a {actionId: HarpoonerAddFile, description: harpoon file}
      h {actionId: HarpoonerQuickMenu, description: open harpoon files}
      "1" {actionId: HarpoonerOpenFile0, description: go to harpoon mark 0}
      "2" {actionId: HarpoonerOpenFile1, description: go to harpoon mark 1}
      "3" {actionId: HarpoonerOpenFile2, description: go to harpoon mark 2}
      "4" {actionId: HarpoonerOpenFile3, description: go to harpoon mark 3}
      "5" {actionId: HarpoonerOpenFile4, description: go to harpoon mark 4}
      "6" {actionId: HarpoonerOpenFile5, description: go to harpoon mark 5}
      "7" {actionId: HarpoonerOpenFile6, description: go to harpoon mark 6}
      "8" {actionId: HarpoonerOpenFile7, description: go to harpoon mark 7}
      "9" {actionId: HarpoonerOpenFile8, description: go to harpoon mark 8}
      "0" {actionId: HarpoonerOpenFile9, description: go to harpoon mark 9}
    }
  }
  i {
    description: ide...
    bindings {
      a {actionId: ReloadAtamanConfigAction, description: reload from ~/.atamanrc.config}
      p {actionId: WelcomeScreen.Plugins, description: plugins}
      r {actionId: RestartIde, description: restart}
      R {actionId: InvalidateCaches, description: invalidate caches and restart}
      Q {actionId: Exit, description: exit}
    }
  }
  m {
    description: multicursors...
    bindings {
      m {actionId: SelectNextOccurrence, description: add for next match}
      a {actionId: SelectAllOccurrences, description: add for all matches}
      k {actionId: EditorCloneCaretAbove, description: add above}
      j {actionId: EditorCloneCaretBelow, description: add below}
      e {actionId: EditorAddCaretPerSelectedLine, description: split selection on line ends}
      n {actionId: FindNext, description: skip occurence}
      u {actionId: UnselectPreviousOccurrence, description: undo last}
      l {actionId: VerticalAlign.VerticalAlignAction, description: align by rightmost}
    }
  }
  p {
    description: project...
    bindings {
      n {actionId: NewProject, description: new}
      g {actionId: Git.Clone, description: git clone}
      o {actionId: WelcomeScreen.OpenProject, description: open new from fs}
      i {actionId: ImportProject, description: import existing from fs}
      r {actionId: ManageRecentProjects, description: switch to recent}
      c {actionId: CloseProject, description: close}
      t {actionId: ActivateTODOToolWindow, description: show todos}
    }
  }
  r {
    description: run...
    bindings {
      r {actionId: Run, description: current target}
      l {actionId: RunAnything, description: any target}
      f {actionId: ChooseRunConfiguration, description: open run target picker}
      t {actionId: RerunTests, description: tests again}
      T {actionId: RerunFailedTests, description: failed tests}
      c {actionId: MakeModule, description: module compilation}
      s {actionId: Stop, description: stop}
      m {actionId: Maven.ExecuteGoal, description: maven goal}
      g {actionId: Gradle.ExecuteTask, description: gradle task}
    }
  }
  s {
    description: symbols...
    bindings {
      d {actionId: FileStructurePopup, description: document}
      w {actionId: GotoSymbol, description: workspace}
      c {actionId: GotoClass, description: classes}
      r {actionId: FindUsages, description: send references to qflist}
      t {actionId: GotoTest, description: test suite/implementation}
    }
  }
  t {
    description: terminal...
    bindings {
      t {actionId: ActivateTerminalToolWindow, description: toggle}
      d {actionId: Terminal.OpenInTerminal, description: in current directory}
    }
  }
  w {
    description: window...
    bindings {
      w {actionId: Switcher, description: buffer and tool window picker}
      e {actionId: ActivateProblemsViewToolWindow, description: error diagnostics}
      m {actionId: ActivateMavenToolWindow, description: maven}
      g {actionId: ActivateGradleToolWindow, description: gradle}
      t {actionId: HideAllWindows, description: toggle all}
      c {actionId: CloseContent, description: close}
    }
  }
  x {
    description: completion...
    bindings {
      l {actionId: CodeCompletion, description: lsp}
      c {actionId: ClassNameCompletion, description: classname}
      t {actionId: SmartTypeCompletion, description: smart type}
      s {actionId: EditorCompleteStatement, description: statement}
      p {actionId: HippieBackwardCompletion, description: previous matching word}
      n {actionId: HippieCompletion, description: next matching word}
      C {actionId: copilot.requestCompletions, description: copilot}
      "[" {actionId: copilot.cyclePrevInlays, description: previous copilot suggestion}
      "]" {actionId: copilot.cycleNextInlays, description: next copilot suggestion}
    }
  }
  z {
    description: zoom...
    bindings {
      "]" {actionId: EditorDecreaseFontSize, description: decrease font size}
      "[" {actionId: EditorIncreaseFontSize, description: increase font size}
      r {actionId: EditorResetFontSize, description: reset font size}
      p {actionId: TogglePresentationMode, description: toggle presentation mode}
      z {actionId: ToggleZenMode, description: toggle zen mode}
    }
  }
}

